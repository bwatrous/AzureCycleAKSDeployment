FROM mcr.microsoft.com/mirror/docker/library/ubuntu:22.04

WORKDIR /cs-install
ENV CS_UID=1169
ENV CS_GID=1169
ENV CS_ROOT=/opt/cycle_server

ARG DEBIAN_FRONTEND=noninteractive
ADD https://aka.ms/downloadazcopy-v10-linux /tmp/azcopy_linux.tar.gz

ADD --checksum=sha256:7d61f737fd661610ccc14aea79764faa1ea94a340cbc8f0029b3d2edea3d80c1 \
    https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/1.0.1/jmx_prometheus_javaagent-1.0.1.jar \
    /cs-install/jmx_prometheus_javaagent-1.0.1.jar

# hard-coded "bionic" should be replaced with "$(lsb_release -cs)"
RUN apt clean \
    && apt update -y \
    && apt upgrade -y \
    && apt install -y  apt-utils openjdk-8-jre-headless less vim wget gnupg2 unzip libncurses5 ca-certificates curl apt-transport-https lsb-release


RUN apt update -y \
    && wget -qO - https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \
    && echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $(lsb_release -cs) main" > /etc/apt/sources.list.d/azure-cli.list \
    && apt -y update \
    && apt install -y azure-cli \
    && tar xzf /tmp/azcopy_linux.tar.gz -C /tmp/ \
    && mv /tmp/azcopy_linux*/azcopy /usr/local/bin/azcopy \
    && rm -rf /tmp/azcopy_linux* \
    && echo "deb https://packages.microsoft.com/repos/cyclecloud-insiders bionic main" > /etc/apt/sources.list.d/cyclecloud-insiders.list \
    && apt install -y python3-venv \
    && update-alternatives --install /usr/bin/python python /usr/bin/python3 1 \
    && apt -y update

RUN groupadd -g ${CS_GID} cycle_server \
    && useradd -u ${CS_UID} -g ${CS_GID} -m -d /opt/cycle_server cycle_server \
    && apt install -y cyclecloud8 \
    && /opt/cycle_server/cycle_server await_startup \
    && /opt/cycle_server/cycle_server execute 'purge where AdType in { "AuthenticatedUser", "Credential", "AuthenticatedSession", "Application.Task", "Cloud.ChefNodeData", "Event", "ClusterEvent", "NodeEvent", "ClusterMetrics", "NodeMetrics", "SystemAspect", "Application.Tunnel" }' \
    && /opt/cycle_server/cycle_server stop \
    && rm -f /opt/cycle_server/.ssh/* \
    && rm -f /opt/cycle_server/logs/* \
    && sed -i 's/webServerMaxHeapSize\=2048M/webServerMaxHeapSize\=4096M/' /opt/cycle_server/config/cycle_server.properties \
    && sed -i 's/webServerPort\=8080/webServerPort\=8080/' /opt/cycle_server/config/cycle_server.properties \
    && sed -i 's/webServerSslPort\=8443/webServerSslPort\=8443/' /opt/cycle_server/config/cycle_server.properties \
    && sed -i 's/webServerEnableHttps\=false/webServerEnableHttps=true/' /opt/cycle_server/config/cycle_server.properties \
    && cd /tmp \
    && unzip /opt/cycle_server/tools/cyclecloud-cli.zip \
    && cd /tmp/cyclecloud-cli-installer \
    && /tmp/cyclecloud-cli-installer/install.sh --system \
    && rm -rf /tmp/cyclecloud-cli-installer \
    && touch /opt/cycle_server/data/ads/initial_load.marker \
    && chmod 777 /opt \
    && chown cycle_server:cycle_server /opt/cycle_server/data/ads/initial_load.marker
    
# Stash a copy the cycle_server/data/ads directory to allow mounting a persistent volume at data/ or data/ads 
# If an empty volume is mounted, we'll copy the initial data directory back to the volume
RUN echo "Stashing a copy of the cycle_server data directory..." \
    && mkdir -p /opt_cycle_server/  \
    && cp -a /opt/cycle_server/data /opt_cycle_server/  \
    && cp -a /opt/cycle_server/work /opt_cycle_server/  \
    && chown -R cycle_server:cycle_server /opt_cycle_server  \
    && ls -ltra  /opt_cycle_server/data/ads/


ADD ./scripts /cs-install/scripts
RUN chown -R cycle_server:cycle_server /cs-install

# Run container as the unprivileged cycle_server user
# (NOTE: This disallows use of privileged ports 80, 443
#        Instead, we'll bind port 8443 and use an AKS Service to port map 443->8443)
USER cycle_server

