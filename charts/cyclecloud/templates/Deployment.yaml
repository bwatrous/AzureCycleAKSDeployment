apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    aadpodidbinding: cc-aks-tf-ui-selector
    {{- include "cyclecloud.labels" . | nindent 4 }}
  name: {{ include "cyclecloud.fullname" . }}
spec:
  replicas: {{ .Values.cycle.replicas }}
  updateStrategy: 
    type: "RollingUpdate"
  selector:
    matchLabels:
      {{- include "cyclecloud.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "cyclecloud.fullname" . }}
  template:
    metadata:
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: runtime/default
        container.seccomp.security.alpha.kubernetes.io/nginx: runtime/default
      labels:
        {{- include "cyclecloud.selectorLabels" . | nindent 8 }}
        aadpodidbinding: cc-aks-tf-ui-selector
    spec:
      tolerations:
      - key: "kubernetes.azure.com/scalesetpriority"
        operator: "Equal"
        value: "spot"
        effect: "NoSchedule"
      # Set non-root user id (cycle_server) for volume ownership
      securityContext: 
          {{- toYaml .Values.securityContext.podSecurityContext | nindent 10 }}
      containers:
      - env:
        - name: CYCLECLOUD_USERNAME
          value: "{{ .Values.cycle.username }}"
        - name: CYCLECLOUD_PASSWORD
          value: "{{ .Values.cycle.password }}"
        - name: CYCLECLOUD_STORAGE
          value: "{{ .Values.cycle.storage }}"
        - name: CYCLECLOUD_USER_PUBKEY
          value: "{{ .Values.cycle.userPubKey }}"
        - name: CYCLECLOUD_RESOURCE_GROUP
          value: "{{ .Values.cycle.resourceGroup }}"
        - name: CYCLECLOUD_WEBSERVER_JVM_OPTIONS
          value: "{{ .Values.cycle.webServerJvmOptions }}"
        - name: CYCLECLOUD_WEBSERVER_MAX_HEAP_SIZE
          value: "{{ .Values.cycle.webServerMaxHeapSize }}"
        - name: CYCLECLOUD_WEBSERVER_PORT
          value: "{{ .Values.cycle.webServerPort }}"
        - name: CYCLECLOUD_WEBSERVER_SSL_PORT
          value: "{{ .Values.cycle.webServerSslPort }}"
        - name: CYCLECLOUD_WEBSERVER_CLUSTER_PORT
          value: "{{ .Values.cycle.webServerClusterPort }}"
        - name: CYCLECLOUD_HOSTNAME
          value: "{{ .Values.cycle.webServerHostname }}"
        - name: CYCLECLOUD_FORCE_DELETE_VMS
          value: "{{ .Values.cycle.forceDeleteVMsEnabled }}"
        - name: CYCLECLOUD_FORCE_DELETE_VMSS
          value: "{{ .Values.cycle.forceDeleteVMSSsEnabled }}"
        {{- if eq .Values.cycle.configureDefaultAccount false }}
        - name: NO_DEFAULT_ACCOUNT
          value: "--noDefaultAccount"
        {{- else }}
        - name: WILL_CONFIGURE_DEFAULT_ACCOUNT
          value: "Will configure default CycleCloud account {{.Values.cycle.configureDefaultAccount}} : {{(eq .Values.cycle.configureDefaultAccount false)}}."
        {{- end }}
        image: "{{ .Values.cycle.containerImage }}"
        resources:
          requests:
            memory: "{{ .Values.resources.requests.memory }}"
            cpu: "{{ .Values.resources.requests.cpu }}"
          limits:
            memory: "{{ .Values.resources.limits.memory }}"
            cpu: "{{ .Values.resources.limits.cpu }}"
        command: ["/bin/bash"]
        securityContext:
          {{- toYaml .Values.securityContext.containerSecurityContext | nindent 10 }}
        args: ["-c", "chmod +x scripts/run_cyclecloud.sh && ./scripts/run_cyclecloud.sh"]
        name: cycle
        ports:
        - containerPort: 8443

        livenessProbe:
          httpGet:
            path: /health_monitor
            port: 8443
            scheme: HTTPS
          failureThreshold: 15
          timeoutSeconds: 60
          periodSeconds: 60
          initialDelaySeconds: 400

        readinessProbe:
          httpGet:
            path: /health_monitor
            port: 8443
            scheme: HTTPS
          failureThreshold: 30
          initialDelaySeconds: 60
          periodSeconds: 10

        volumeMounts:
        - mountPath: "/opt/cycle_server/data"
          name: cyclecloud-data-volume
          subPath: data
        - mountPath: "/opt/cycle_server/.ssh"
          name: cyclecloud-data-volume
          subPath: ssh_keys
        - mountPath: "/opt/cycle_server/logs"
          name: cyclecloud-data-volume
          subPath: logs
        - mountPath: "/opt/cycle_server/work"
          name: cyclecloud-data-volume
          subPath: work
        - mountPath: /cs-install/prometheus_exporter_config.yaml
          name: prometheus-config-volume


      volumes:
      - name: cyclecloud-data-volume
        persistentVolumeClaim:
          claimName: {{ include "cyclecloud.fullname" . }}
      - name: prometheus-config-volume
        configMap:
          name: prometheus-exporter-config